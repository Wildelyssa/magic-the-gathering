{"version":3,"sources":["Components/SearchBar.js","Components/Card.js","Components/Loader.js","Components/Error.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","className","onChange","onSearchChange","type","placeholder","Card","src","imageUrl","alt","name","title","Loader","Error","errorText","App","useState","cards","setCards","search","setSearch","error","setError","loading","setLoading","useEffect","fetch","then","response","json","respData","catch","filteredCards","filter","item","toLowerCase","includes","noCards","length","event","target","value","map","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAWeA,EATG,SAACC,GAEf,OACI,qBAAKC,UAAU,mBAAf,SACI,uBAAOC,SAAUF,EAAMG,eAAgBC,KAAK,SAASC,YAAY,uBCQ9DC,G,MAZF,SAACN,GACV,OACI,qBAAKC,UAAU,OAAf,SACI,qBACIM,IAAKP,EAAMQ,SACXC,IAAKT,EAAMU,KACXC,MAAOX,EAAMU,WCEdE,G,MARA,WACX,OACI,qBAAKX,UAAU,mBAAf,SACI,qBAAKA,UAAU,eCKZY,G,MARD,SAACb,GACX,OACI,8BACI,qBAAIC,UAAU,aAAd,qBAAoCD,EAAMc,UAA1C,WCyDGC,EAvDH,WAEV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WAGRC,MADe,8HAEZC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLN,GAAW,GACXN,EAASY,EAASb,UAEnBc,OAAM,SAAAV,GACLG,GAAW,GACXF,EAASD,QAEZ,IAGH,IAOMW,EAFaf,EAAMgB,QAAO,SAAAC,GAAI,OAAIA,EAAK1B,YAEZyB,QAAO,SAAAC,GAAI,OAAIA,EAAKxB,KAAKyB,cAAcC,SAASjB,EAAOgB,kBAClFE,EAAoC,IAAzBL,EAAcM,OAE/B,OACE,sBAAKrC,UAAU,aAAf,UACE,qBAAKA,UAAU,SACf,cAAC,EAAD,CAAWE,eAbe,SAACoC,GAC7BnB,EAAUmB,EAAMC,OAAOC,UAanBlB,EAAU,cAAC,EAAD,IACZ,qBAAKtB,UAAU,iBAAf,SACIoB,EACA,cAAC,EAAD,IACAgB,EACA,cAAC,EAAD,CAAOvB,UAAU,mBAChBkB,EAAcU,KAAI,SAAAR,GAAI,OACrB,cAAC,EAAD,CAEE1B,SAAU0B,EAAK1B,SACfE,KAAMwB,EAAKxB,MAFNwB,EAAKS,aCxCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e12ed736.chunk.js","sourcesContent":["import './SearchBar.css';\n\nconst SearchBar = (props) => {\n\n    return (\n        <div className='search-container'>\n            <input onChange={props.onSearchChange} type='search' placeholder='Search Cards...'></input>\n        </div>\n    )\n};\n\nexport default SearchBar;","import './Card.css';\n\nconst Card = (props) => {\n    return (\n        <div className='card'>\n            <img\n                src={props.imageUrl}\n                alt={props.name}\n                title={props.name}>\n            </img>\n        </div>\n    )\n};\n\nexport default Card;","import './Loader.css';\n\nconst Loader = () => {\n    return (\n        <div className='loader-container'>\n            <div className='loader'></div>\n        </div>\n    )\n};\n\nexport default Loader;","import './Error.css';\n\nconst Error = (props) => {\n    return (\n        <div>\n            <h1 className=\"error-text\">Oooops! {props.errorText} </h1>\n        </div>\n    )\n};\n\nexport default Error;","import './App.css';\nimport SearchBar from './Components/SearchBar';\nimport Card from './Components/Card';\nimport Loader from './Components/Loader';\nimport Error from './Components/Error';\nimport { useEffect, useState } from 'react';\n\nconst App = () => {\n  //Set State\n  const [cards, setCards] = useState([]);\n  const [search, setSearch] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    //API call\n    const APIurl = 'https://api.magicthegathering.io/v1/cards?supertype=legendary&types=creature&gameFormat=commander&&pageSize=15&random=true';\n    fetch(APIurl)\n      .then((response) => response.json())\n      .then((respData) => {\n        setLoading(false)\n        setCards(respData.cards)\n      })\n      .catch(error => {\n        setLoading(false)\n        setError(error)\n      })\n  }, []);\n\n  //search bar functionality\n  const onSearchChangeHandler = (event) => {\n    setSearch(event.target.value);\n  };\n\n  //filter out cards that don't have an imageUrl\n  const cardsArray = cards.filter(item => item.imageUrl);\n  //search cards by name\n  const filteredCards = cardsArray.filter(item => item.name.toLowerCase().includes(search.toLowerCase()));\n  const noCards = (filteredCards.length === 0);\n  \n  return (\n    <div className='background'>\n      <div className='logo' />\n      <SearchBar onSearchChange={onSearchChangeHandler} />\n      { loading ? <Loader /> :\n      <div className='card-container'>\n        { error \n        ? <Error/> \n        : noCards \n        ? <Error errorText=\"No Cards Found\" /> \n        : (filteredCards.map(item =>\n            <Card\n              key={item.id}\n              imageUrl={item.imageUrl}\n              name={item.name}\n            />\n          ))} \n      </div> }\n    </div>\n  )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}